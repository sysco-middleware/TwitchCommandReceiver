openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: current-time-controller
    description: Current Time Controller
  - name: user-service-controller
    description: User Service Controller
paths:
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    trace:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingTRACE
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /currentTime:
    get:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingPUT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingPOST
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingDELETE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    head:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingHEAD
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingPATCH
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    trace:
      tags:
        - current-time-controller
      summary: getCurrentDateTime
      operationId: getCurrentDateTimeUsingTRACE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/users:
    get:
      tags:
        - user-service-controller
      summary: fetchUsers
      operationId: fetchUsersUsingGET
      parameters:
        - name: gender
          in: query
          description: gender
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-service-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-service-controller
      summary: insertNewUser
      operationId: insertNewUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/users/{userUid}':
    get:
      tags:
        - user-service-controller
      summary: fetchUser
      operationId: fetchUserUsingGET
      parameters:
        - name: userUid
          in: path
          description: userUid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-service-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      parameters:
        - name: userUid
          in: path
          description: userUid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    UserReq:
      title: UserReq
      required:
        - age
        - email
        - firstName
        - gender
        - lastName
      type: object
      properties:
        age:
          type: integer
          format: int32
        email:
          type: string
        firstName:
          type: string
        gender:
          type: string
          enum:
            - FEMALE
            - MALE
        lastName:
          type: string
        userUid:
          type: string
          format: uuid
    UserRes:
      title: UserRes
      required:
        - age
        - email
        - firstName
        - gender
        - lastName
      type: object
      properties:
        age:
          type: integer
          format: int32
        dateOfBirth:
          type: integer
          format: int32
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        gender:
          type: string
          enum:
            - FEMALE
            - MALE
        lastName:
          type: string
        userUid:
          type: string
          format: uuid
    View:
      title: View
      type: object
      properties:
        contentType:
          type: string
